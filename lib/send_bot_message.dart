import 'dart:convert';import 'dart:io';import 'package:equatable/equatable.dart';import 'package:satisfaction/query.dart';import 'network_service.dart';abstract class ICartRepository extends Equatable {  Future sendOrder({required String name, required String type, required String sum}) async {}}class CartRepository extends ICartRepository {  @override  Future sendOrder({required String name, required String type, required String sum}) async {    String ballEmoji = "\u26BD";    const smiley = "\u{1F604}";   var s = utf8convert(r"0xF00x9F0x980x82");    String fullText =        " Name: $name ${r"\u{2705}"} PhoneNumber:" " $smiley $type ${"\u{FF0B}"}Address: $sum ";   var thunderstorm = r"u'\U0001F4A8'";    QueryParams params = QueryParams();    params.append("chat_id", NetworkService.TELEGRAM_CHAT_ID);    params.append("text", fullText);   // var response = await NetworkService.POST(NetworkService.APi_POST_ORDER_CREATE, create);   //  if (response.statusCode == 200 || response.statusCode == 201) {   //    await NetworkService.SENDTELEGRAMBOT(NetworkService.APi_TELEGRAM_BOT, params.params);   //    return true;   //  }   //  return response.statusCode;   return await NetworkService.SENDTELEGRAMBOT(NetworkService.APi_TELEGRAM_BOT, params.params);  }  @override  List<Object?> get props => [];}String utf8convert(String text) {  var bytes = text.codeUnits;  String decodedCode = utf8.decode(bytes, allowMalformed: true);  if (decodedCode.contains("ï¿½")) {    return text;  }  return decodedCode;}